{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let OrganizerComponent = class OrganizerComponent {\n  constructor(organizerService) {\n    this.organizerService = organizerService;\n    this.selectedCategory = '';\n  }\n  ngOnInit() {\n    this.getUnsoldPlayers();\n    this.getTeams();\n    this.getCategories();\n  }\n  getUnsoldPlayers() {\n    this.organizerService.getUnsoldPlayers().subscribe(players => {\n      this.unsoldPlayers = players;\n    });\n  }\n  getTeams() {\n    this.organizerService.getTeams().subscribe(teams => {\n      this.teams = teams;\n    });\n  }\n  getCategories() {\n    // You need to implement a service method to fetch the categories from the backend.\n    // For example: this.organizerService.getCategories().subscribe((categories) => this.categories = categories);\n  }\n  filterPlayers() {\n    if (this.selectedCategory) {\n      this.unsoldPlayers = this.unsoldPlayers.filter(player => player.category === this.selectedCategory);\n    } else {\n      this.getUnsoldPlayers();\n    }\n  }\n  assignPlayerToTeam(player) {\n    // Implement the assign player to team functionality here\n  }\n  releasePlayerFromTeam(team) {\n    // Implement the release player from team functionality here\n  }\n};\nOrganizerComponent = __decorate([Component({\n  selector: 'app-organizer',\n  templateUrl: './organizer.component.html',\n  styleUrls: ['./organizer.component.css']\n})], OrganizerComponent);","map":{"version":3,"names":["Component","OrganizerComponent","constructor","organizerService","selectedCategory","ngOnInit","getUnsoldPlayers","getTeams","getCategories","subscribe","players","unsoldPlayers","teams","filterPlayers","filter","player","category","assignPlayerToTeam","releasePlayerFromTeam","team","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/grd21/Training/TechMolders/IPL-Bidding-FrontEnd/src/app/organizer/organizer.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { OrganizerService } from '../services/organizer.service';\nimport { Player } from '../models/player';\nimport { Team } from '../models/team';\n\n@Component({\n  selector: 'app-organizer',\n  templateUrl: './organizer.component.html',\n  styleUrls: ['./organizer.component.css']\n})\nexport class OrganizerComponent implements OnInit {\n  unsoldPlayers: Player[];\n  teams: Team[];\n  categories: string[]; // Assuming you have a list of categories from the backend\n  selectedCategory: string = '';\n\n  constructor(private organizerService: OrganizerService) { }\n\n  ngOnInit(): void {\n    this.getUnsoldPlayers();\n    this.getTeams();\n    this.getCategories();\n  }\n\n  getUnsoldPlayers(): void {\n    this.organizerService.getUnsoldPlayers().subscribe((players) => {\n      this.unsoldPlayers = players;\n    });\n  }\n\n  getTeams(): void {\n    this.organizerService.getTeams().subscribe((teams) => {\n      this.teams = teams;\n    });\n  }\n\n  getCategories(): void {\n    // You need to implement a service method to fetch the categories from the backend.\n    // For example: this.organizerService.getCategories().subscribe((categories) => this.categories = categories);\n  }\n\n  filterPlayers(): void {\n    if (this.selectedCategory) {\n      this.unsoldPlayers = this.unsoldPlayers.filter((player) => player.category === this.selectedCategory);\n    } else {\n      this.getUnsoldPlayers();\n    }\n  }\n\n  assignPlayerToTeam(player: Player): void {\n    // Implement the assign player to team functionality here\n  }\n\n  releasePlayerFromTeam(team: Team): void {\n    // Implement the release player from team functionality here\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAM7BC,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IAFpC,KAAAC,gBAAgB,GAAW,EAAE;EAE6B;EAE1DC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,EAAE;IACvB,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAF,gBAAgBA,CAAA;IACd,IAAI,CAACH,gBAAgB,CAACG,gBAAgB,EAAE,CAACG,SAAS,CAAEC,OAAO,IAAI;MAC7D,IAAI,CAACC,aAAa,GAAGD,OAAO;IAC9B,CAAC,CAAC;EACJ;EAEAH,QAAQA,CAAA;IACN,IAAI,CAACJ,gBAAgB,CAACI,QAAQ,EAAE,CAACE,SAAS,CAAEG,KAAK,IAAI;MACnD,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAJ,aAAaA,CAAA;IACX;IACA;EAAA;EAGFK,aAAaA,CAAA;IACX,IAAI,IAAI,CAACT,gBAAgB,EAAE;MACzB,IAAI,CAACO,aAAa,GAAG,IAAI,CAACA,aAAa,CAACG,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,QAAQ,KAAK,IAAI,CAACZ,gBAAgB,CAAC;KACtG,MAAM;MACL,IAAI,CAACE,gBAAgB,EAAE;;EAE3B;EAEAW,kBAAkBA,CAACF,MAAc;IAC/B;EAAA;EAGFG,qBAAqBA,CAACC,IAAU;IAC9B;EAAA;CAEH;AA9CYlB,kBAAkB,GAAAmB,UAAA,EAL9BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWtB,kBAAkB,CA8C9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}